name: Test & Linter

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
      - develop
  workflow_dispatch:

jobs:

  tests-docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Create env file
        run: |
          touch .env
          echo MONGO_INITDB_ROOT_USERNAME=${{ secrets.MONGO_INITDB_ROOT_USERNAME }} >> .env
          echo MONGO_INITDB_ROOT_PASSWORD=${{ secrets.MONGO_INITDB_ROOT_PASSWORD }} >> .env
          echo MONGO_INITDB_DATABASE=${{ secrets.MONGO_INITDB_DATABASE }} >> .env
          echo MONGO_URL=${{ secrets.MONGO_URL }} >> .env
          echo CLIP_INFERENCE_API=${{ secrets.CLIP_INFERENCE_API }} >> .env
      - name: Build the stack
        run: docker compose -f docker-compose.ci.yml up --build -d
      - name: Run tests on backend
        run: |
          sleep 30
          docker ps
          docker exec similarity-scraper-server-fastapi-1 pytest tests/test_sample.py tests/test_scraper.py --color=yes --disable-warnings
      - name: Stop containers
        # the containers should be stopped regardless of
        # the test result
        if: always()
        run: docker compose down


  linter:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install ruff
    - name: Analysing the code with pylint
      run: |
        ruff check $(git ls-files '*.py')
